generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Album {
  id          String     @id @default(uuid()) @db.Uuid
  spotifyId   String     @unique
  genre       String
  artistId    String     @db.Uuid
  image       String
  imageLarge  String
  releaseDate DateTime
  title       String
  artist      Artist     @relation(fields: [artistId], references: [id])
  pressings   Pressing[]
  tracklist   Track[]
  User        User[]
}

model Artist {
  id        String  @id @default(uuid()) @db.Uuid
  name      String
  image     String
  bio       String
  spotifyId String  @unique
  albums    Album[]
}

model Track {
  id        String  @id @default(uuid()) @db.Uuid
  title     String
  duration  Int
  albumId   String  @db.Uuid
  spotifyId String  @unique
  features  String?
  number    Int
  album     Album   @relation(fields: [albumId], references: [id])
}

model User {
  id                String             @id @default(uuid()) @db.Uuid
  email             String             @unique
  firstName         String
  lastName          String
  password          String
  isAdmin           Boolean            @default(false)
  registrationToken String?            @unique
  lastLogin         DateTime?
  spotifyToken      String?
  albumId           String?            @db.Uuid
  favouriteAlbum    Album?             @relation(fields: [albumId], references: [id])
  collection        PressingsForUser[]
  joinedAt          DateTime           @default(now())
  bio               String?
}

model Pressing {
  id      String             @id @default(uuid()) @db.Uuid
  name    String
  albumId String             @db.Uuid
  color   String
  image   String
  album   Album              @relation(fields: [albumId], references: [id])
  user    PressingsForUser[]
}

model PressingsForUser {
  user       User     @relation(fields: [userId], references: [id])
  userId     String   @db.Uuid
  pressing   Pressing @relation(fields: [pressingId], references: [id])
  pressingId String   @db.Uuid
  addedAt    DateTime @default(now())
  salePrice  Float?

  @@id([userId, pressingId])
}
